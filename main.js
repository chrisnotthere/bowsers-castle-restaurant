(()=>{"use strict";var n={852:(n,e,t)=>{n.exports=t.p+"4e51e25a375b67758cda.png"},426:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(15),o=t.n(r),a=t(645),i=t.n(a),c=t(667),l=t.n(c),A=new URL(t(249),t.b),d=new URL(t(852),t.b),s=i()(o()),u=l()(A),m=l()(d);s.push([n.id,"@font-face {\n  font-family: 'Header';\n  src: url("+u+") format('ttf');\n  font-weight: 600;\n  font-style: normal;\n}\n\n:root{\n  --main-banner-color: rgba(245, 122, 22, 0.9);\n  --section-color: rgba(251, 255, 0, 0.75);\n  --menu-link-color: rgba(248, 156, 17, 0.9);\n  --alt-menu-link-color: rgb(255, 0, 0);\n  --card-color: rgba(255, 217, 0, 0.75);\n  --alt-card-color: rgba(224, 218, 181, 0.637);\n  \n}\n\nbody html{\n  position: relative;\n  min-height: 100%;\n}\n\n#content{\n  background: url("+m+") no-repeat center center fixed;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  min-height: 100%;\n  left: 0; right: 0; top:0;\n}\n\nnav {\n  display: flex;\n  flex-direction: column;\n  justify-content:flex-end;\n  position: absolute;\n  top: 1rem; \n  left: 0; right: 0;\n  height: 13rem;\n  background-color: var(--main-banner-color);\n\n}\n\nul {\n  list-style: none;\n}\n\nli {\n  display: inline;\n  background-color: var(--menu-link-color);\n  padding: 0.5rem;\n  margin: 0.2rem;\n}\n\nli:hover, .active, button:hover {\n  background-color: var(--alt-menu-link-color);\n  padding: 0.7rem;\n  cursor: pointer;\n}\n\nli a{\n  text-decoration: none;\n  color: black;\n}\n\nbutton {\n  display: inline;\n  background-color: var(--menu-link-color);\n  padding: 0.5rem;\n  margin: 0.1rem;\n}\n\nheader h1{\n  position: absolute;\n  font-size: 5rem;\n  font-family: 'Header';\n  align-self: center;\n}\n\nsection{\n  padding: 5rem;\n  background-color: var(--section-color);\n  width: 50%;\n  align-items: center;\n  border-radius: 1rem;\n  border: 5pt solid yellow;\n  text-align: center;\n  margin: 5rem;\n}\n\nsection#menu{\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  border: 5pt solid var(--alt-menu-link-color);\n  margin-top: 5rem;\n  margin-bottom: 5rem;\n}\n\nsection#contact{\n  border: 5pt solid black;\n}\n\nheader{\n  text-align: center;\n  margin-bottom: 10rem; \n}\n\n#bowser{\n  height: 150px;\n}\n\nfooter{\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  align-items: center;\n  position: absolute;\n  background-color: var(--main-banner-color);\n  bottom: 0; left: 0; right: 0;\n  padding: 1rem;\n}\n\n#bowserImage{\n  height: 150px;\n}\n\n/* menu cards */\n.card {\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  transition: 0.3s;\n  width: 30%;\n  margin: 1rem;\n  padding: 1rem;\n  background-color: var(--card-color);\n}\n\n.card:hover {\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  background-color: var(--alt-card-color);\n}\n\n.container {\n  padding: 2px 16px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,0DAAyC;EACzC,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,4CAA4C;EAC5C,wCAAwC;EACxC,0CAA0C;EAC1C,qCAAqC;EACrC,qCAAqC;EACrC,4CAA4C;;AAE9C;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,iFAA4E;EAC5E,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;EAChB,OAAO,EAAE,QAAQ,EAAE,KAAK;AAC1B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,wBAAwB;EACxB,kBAAkB;EAClB,SAAS;EACT,OAAO,EAAE,QAAQ;EACjB,aAAa;EACb,0CAA0C;;AAE5C;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,wCAAwC;EACxC,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,4CAA4C;EAC5C,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,eAAe;EACf,wCAAwC;EACxC,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,wBAAwB;EACxB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,eAAe;EACf,uBAAuB;EACvB,4CAA4C;EAC5C,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;EAClB,0CAA0C;EAC1C,SAAS,EAAE,OAAO,EAAE,QAAQ;EAC5B,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA,eAAe;AACf;EACE,uCAAuC;EACvC,gBAAgB;EAChB,UAAU;EACV,YAAY;EACZ,aAAa;EACb,mCAAmC;AACrC;;AAEA;EACE,wCAAwC;EACxC,uCAAuC;AACzC;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:["@font-face {\n  font-family: 'Header';\n  src: url('/src/header.ttf') format('ttf');\n  font-weight: 600;\n  font-style: normal;\n}\n\n:root{\n  --main-banner-color: rgba(245, 122, 22, 0.9);\n  --section-color: rgba(251, 255, 0, 0.75);\n  --menu-link-color: rgba(248, 156, 17, 0.9);\n  --alt-menu-link-color: rgb(255, 0, 0);\n  --card-color: rgba(255, 217, 0, 0.75);\n  --alt-card-color: rgba(224, 218, 181, 0.637);\n  \n}\n\nbody html{\n  position: relative;\n  min-height: 100%;\n}\n\n#content{\n  background: url('../dist/images/castleBG.png') no-repeat center center fixed;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  min-height: 100%;\n  left: 0; right: 0; top:0;\n}\n\nnav {\n  display: flex;\n  flex-direction: column;\n  justify-content:flex-end;\n  position: absolute;\n  top: 1rem; \n  left: 0; right: 0;\n  height: 13rem;\n  background-color: var(--main-banner-color);\n\n}\n\nul {\n  list-style: none;\n}\n\nli {\n  display: inline;\n  background-color: var(--menu-link-color);\n  padding: 0.5rem;\n  margin: 0.2rem;\n}\n\nli:hover, .active, button:hover {\n  background-color: var(--alt-menu-link-color);\n  padding: 0.7rem;\n  cursor: pointer;\n}\n\nli a{\n  text-decoration: none;\n  color: black;\n}\n\nbutton {\n  display: inline;\n  background-color: var(--menu-link-color);\n  padding: 0.5rem;\n  margin: 0.1rem;\n}\n\nheader h1{\n  position: absolute;\n  font-size: 5rem;\n  font-family: 'Header';\n  align-self: center;\n}\n\nsection{\n  padding: 5rem;\n  background-color: var(--section-color);\n  width: 50%;\n  align-items: center;\n  border-radius: 1rem;\n  border: 5pt solid yellow;\n  text-align: center;\n  margin: 5rem;\n}\n\nsection#menu{\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  border: 5pt solid var(--alt-menu-link-color);\n  margin-top: 5rem;\n  margin-bottom: 5rem;\n}\n\nsection#contact{\n  border: 5pt solid black;\n}\n\nheader{\n  text-align: center;\n  margin-bottom: 10rem; \n}\n\n#bowser{\n  height: 150px;\n}\n\nfooter{\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  align-items: center;\n  position: absolute;\n  background-color: var(--main-banner-color);\n  bottom: 0; left: 0; right: 0;\n  padding: 1rem;\n}\n\n#bowserImage{\n  height: 150px;\n}\n\n/* menu cards */\n.card {\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  transition: 0.3s;\n  width: 30%;\n  margin: 1rem;\n  padding: 1rem;\n  background-color: var(--card-color);\n}\n\n.card:hover {\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  background-color: var(--alt-card-color);\n}\n\n.container {\n  padding: 2px 16px;\n}"],sourceRoot:""}]);const p=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&o[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),e.push(l))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,o=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],i=!0,c=!1;try{for(t=t.call(n);!(i=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);i=!0);}catch(n){c=!0,o=n}finally{try{i||null==t.return||t.return()}finally{if(c)throw o}}return a}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if(!i)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),A="/*# ".concat(l," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(d).concat([A]).join("\n")}return[a].join("\n")}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var l=n[c],A=r.base?l[0]+r.base:l[0],d=a[A]||0,s="".concat(A," ").concat(d);a[A]=d+1;var u=t(s),m={css:l[1],media:l[2],sourceMap:l[3]};-1!==u?(e[u].references++,e[u].updater(m)):e.push({identifier:s,updater:o(m,r),references:1}),i.push(s)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var l=r(n,o),A=0;A<a.length;A++){var d=t(a[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=l}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r=t.css,o=t.media,a=t.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},249:(n,e,t)=>{n.exports=t.p+"04dea529d3802106e6d7.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),l=t.n(c),A=t(216),d=t.n(A),s=t(589),u=t.n(s),m=t(426),p={};p.styleTagTransform=u(),p.setAttributes=l(),p.insert=i().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=d(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;function C(){const n=document.createElement("header"),e=document.createElement("nav"),t=document.createElement("h1");t.textContent="Bowser's Castle";const r=document.createElement("ul"),o=document.createElement("li"),a=document.createElement("a"),i=document.createElement("li"),c=document.createElement("a"),l=document.createElement("li"),A=document.createElement("a");return o.append(a),a.innerText="Home",i.append(c),c.innerText="Menu",l.append(A),A.innerText="Contact",o.id="homeBtn",i.id="menuBtn",l.id="contactBtn",o.addEventListener("click",(n=>E())),i.addEventListener("click",(n=>function(){const n=document.querySelector('div[id="content"]');n.innerHTML="",n.appendChild(C()),n.appendChild(function(){const n=document.createElement("section");n.id="menu";const e=document.createElement("div");function t(n,e,t){const r=document.createElement("div");r.classList.add("card");const o=document.createElement("img");o.src=`../dist/images/${t}`,o.alt=n,o.style.width="100%";const a=document.createElement("h4");a.textContent=n;const i=document.createElement("p");i.textContent=e;const c=document.createElement("div");c.classList.add("container"),c.appendChild(a),c.appendChild(i),r.appendChild(o),r.appendChild(c);const l=document.querySelector('li[id="homeBtn"]'),A=document.querySelector('li[id="menuBtn"]'),d=document.querySelector('li[id="contactBtn"]');return l.classList.remove("active"),A.classList.add("active"),d.classList.remove("active"),r}return n.appendChild(e),n.appendChild(t("Full English Breakfast","Eggs, sausage, bacon, black pudding, beans, lots of butter and salt","full-english.jpg")),n.appendChild(t("Chorizo Hash","Scrambled eggs, house-made chorizo, black beans, bell peppers, tomatoes, melted cheddar","chorizo-hash.jpg")),n.appendChild(t("Spicy Eggs Benedicy","Jalapeno popper, bacone, chipotle, hollandaise, eggs cooked the way you like them","eggs-benny.jpg")),n.appendChild(t("Grilled Cheese","Cheese, cheese, cheese, cheese, and cheese","grilled-cheese.jpg")),n.appendChild(t("Breakfast Burrito","Scrambled eggs, caramelized onion, tomato, avacado, blah, blah","burrito.jpg")),n.appendChild(t("Omelette","Spinach, mushroom, basil pesto, avacodo, brie","omlette.jpg")),n}()),n.appendChild(h())}())),l.addEventListener("click",(n=>function(){const n=document.querySelector('div[id="content"]');n.innerHTML="",n.appendChild(C()),n.appendChild(function(){const n=document.createElement("section");n.id="contact";const e=document.createElement("p");e.innerHTML="&#9742 505 123 4567";const t=document.createElement("p");t.textContent="123 DEATH VALLEY, CA 92328, United States";const r=document.createElement("img");r.src="../dist/images/location.png",r.alt="bowsers castle location",r.style.width="100%",n.appendChild(e),n.appendChild(t),n.appendChild(r);const o=document.querySelector('li[id="homeBtn"]'),a=document.querySelector('li[id="menuBtn"]'),i=document.querySelector('li[id="contactBtn"]');return o.classList.remove("active"),a.classList.remove("active"),i.classList.add("active"),n}()),n.appendChild(h())}())),r.appendChild(o),r.appendChild(i),r.appendChild(l),e.appendChild(t),e.appendChild(r),n.appendChild(e),n}function h(){const n=document.createElement("footer"),e=document.createElement("div"),t=document.createElement("div");return e.textContent="Created by chrisnotthere (github link)",t.innerHTML="Bowser's Castle &#9400; 2020",n.appendChild(e),n.appendChild(t),n}const E=function(){const n=document.querySelector('div[id="content"]');n.innerHTML="",n.appendChild(C()),n.appendChild(function(){const n=document.createElement("section"),e=document.createElement("img");e.src="../dist/images/bowser.png",e.alt="Bowser",e.id="bowserImage";const t=document.createElement("p");t.textContent="The best breakfast in town!";const r=document.createElement("p");r.textContent="Come on by and see what Bowser has been up to.";const o=document.createElement("p");o.textContent="Order online or visit us!",n.appendChild(t),n.appendChild(e),n.appendChild(r),n.appendChild(o);const a=document.querySelector('li[id="homeBtn"]'),i=document.querySelector('li[id="menuBtn"]'),c=document.querySelector('li[id="contactBtn"]');return a.classList.add("active"),i.classList.remove("active"),c.classList.remove("active"),n}()),n.appendChild(h())};E()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,